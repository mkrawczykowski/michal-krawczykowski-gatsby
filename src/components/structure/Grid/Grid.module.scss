@use '../../../styles/global/variables';
@use 'sass:math';
@use 'sass:map';

// Grid settings
$containerHorizontalPadding: 2; //rem units
$container-width: 134.4; //rem units
$gap: 2rem;
$columns: ("xs": 2, "sm": 2, "md": 8, "lg": 8, "xl": 12, "2xl": 12, "3xl": 12);

.container{
  width: 100%;
  max-width: calc(($container-width * 1rem) + $gap);
  padding: 0 calc($containerHorizontalPadding / 2) * 1rem;
  margin: 0 auto;

  .row{
    display: flex;
    margin-left: calc($gap / 2 * -1);
    margin-right: calc($gap / 2 * -1);
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;

    .col{
      padding-right: calc($gap / 2);
      padding-left: calc($gap / 2);
      width: 100%;
    }
    
    @each $breakpointName, $breakpointValue in variables.$breakpoints {
      $breakpointsIndex: index(variables.$breakpoints, $breakpointName $breakpointValue);
      $breakpointValuePx: $breakpointValue * 1px;
      
      $colsNumberForBreakpoint: map.get($columns, $breakpointName);
      $colWidth:  math.div(100%, $colsNumberForBreakpoint);
      @if $breakpointsIndex <= $colsNumberForBreakpoint{
        @media screen and (min-width:#{$breakpointValuePx}){
          
          .test{
            border: 1px solid $breakpointsIndex;
          }
          @for $i from $colsNumberForBreakpoint through 1{
            .col-#{$breakpointName}-#{$i} {
              width: calc(#{$colWidth} * #{$i});
              $parentWidth: $colWidth * $i;
              
              @each $breakpointNameChild, $breakpointValueChild in variables.$breakpoints {
                $breakpointsIndexChild: index(variables.$breakpoints, $breakpointNameChild $breakpointValueChild);
                @if $breakpointsIndexChild <= $breakpointsIndex{
                  @for $childIndex from $colsNumberForBreakpoint through 1{
                    .col-#{$breakpointNameChild}-#{$childIndex} {
                      $parentToChildRatio: math.div($colsNumberForBreakpoint,$i);
                      width: math.div(100%, $parentWidth) * $childIndex * $colWidth;
                    }
                  }   
                }
              }
            }
          }
        }
      }

      
    }
  }  
}
